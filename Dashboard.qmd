---
title: "Violencia de género"
author: "Análisis de datos"
format: 
    dashboard:
      theme: lumen
server: shiny
---
```{r message=FALSE, warning=FALSE}
#| context: setup
library(psych)
library(tidyverse)
library(ggrepel)
library(factoextra)
library(rio)
```

```{r message=FALSE}
#| context: setup
data_violencia <- import("https://github.com/KatiaVillalobos/Trabajo-Final/raw/main/violencia.xlsx")
corrupcion <-import("https://github.com/KatiaVillalobos/Trabajo-Final/raw/main/cpi.csv", header = TRUE)
Gender <- import("https://github.com/KatiaVillalobos/Trabajo-Final/raw/main/P_Data_Extract_From_Gender_Statistics.xlsx")
```

```{r}
#| context: setup
data_violencia$PBI = round(data_violencia$PBI, 2)
data_violencia$`Unemployment, female` = round(data_violencia$`Unemployment, female`, 2)

corrupcion <- corrupcion[, c(1, 4)]

names(corrupcion)[names(corrupcion) == "2022"] <- "corrup_percep"
names(corrupcion)[names(corrupcion) == "Country / Territory"] <- "Country Name"

# Creamo índice de desigualdad de género 

Gender$Indice = rowMeans(Gender[, 2:15], na.rm=TRUE)
Gender$Indice = (Gender$Indice)*100

Gender[,-c(1,16)] = NULL

Gender[,2]= replace(Gender[,2], Gender[,2] == "NaN",NA)

Gender$Indice = round(Gender$Indice, 2)
```

```{r}
#| context: setup
violencia <- merge(Gender, data_violencia, by = "Country Name")
violencia <- merge(corrupcion, violencia, by = "Country Name")
```

```{r}
#| context: setup
colnames(violencia)= c("Pais","corrupcion", "Ind_desigualdad","PBI","IDH", "tasa_alfab",
                  "tasa_desempleo", "voz_politica",
                  "auto_repro", "lib_mov", "acceso_finan", "justicia","derechos_lab")

library(Hmisc)
label(violencia$corrupcion)<-"Percepción de corrupción"
label(violencia$Ind_desigualdad)<-"Indice de desigualdad de género"
label(violencia$PBI)<-"Producto Bruto Intero per cápita"
label(violencia$IDH)<-"Indice de desarrollo humano"
label(violencia$tasa_alfab)<-"Tasa de alfabetización"
label(violencia$tasa_desempleo)<-"Tasa de desempleo"
label(violencia$voz_politica)<-"Voz política"
label(violencia$auto_repro)<-"Autonomía reproductiva"
label(violencia$lib_mov)<-"Libertad de movimiento"
label(violencia$acceso_finan)<-"Acceso a servicios financieros formales"
label(violencia$justicia)<-"Acceso a justicia"
label(violencia$derechos_lab)<-"Derechos laborales"

subdata <- violencia |> select(2:6,10,11,13)
```

# Panorama general

## Row {height=60%}

```{r message=FALSE}
#| title: Percepción de desigualdad de género a nivel mundial
library(tmap)

data("World")

world_map_data <- merge(World, Gender, by.x = "name", by.y = "Country Name", all.x = TRUE)

tm_shape(world_map_data) +
  tm_polygons("Indice", title = "Índice", palette = "Blues", style = "quantile") +
  tm_text("name", size = 0.4, root = 1) +
  tm_layout(bg.color = "lightblue") +
  tm_basemap(server = "Stamen.TonerLite")

```

## Row {height=40%}
```{r}
tmap_mode("view")  
tmap_last()
```

```{r warning=FALSE}
#| title: Relación entre Libertad de Movimiento y Voz Política
library(ggplot2)

ggplot(violencia, aes(x = lib_mov, y = voz_politica, label = Pais)) +
  geom_point() +
  geom_text_repel(aes(label = Pais), size = 3)+
  labs(x = "Libertad de Movimiento", y = "Voz Política") +
  geom_point(data=violencia |> filter(Pais=="Peru"), 
             aes(x=lib_mov,y=voz_politica, label= Pais), 
             color='red',
             size=3) +
  theme_classic()
```


# EFA

```{r}
#| context: setup
subdata = na.omit(subdata) 
matrixcor<-cor(subdata)
```

## Row {height=50%}
```{r}
#| title: Matriz de correlaciones
cor.plot(matrixcor)
```

```{r}
#| title: Kaiser-Meyer-Olkin (KMO) y Prueba de Esfericidad de Bartlett
psych::KMO(subdata)
cortest.bartlett(matrixcor,n=dim(subdata)[1])
```

## Row {height=50%}
```{r}
fa.parallel(subdata,fa="fa") 
```

```{r}
#| context: setup
factorial <- fa(subdata,
                nfactors = 3, 
                rotate = "varimax", 
                cor = 'mixed',
                fm="minres") 
```

```{r}
#| title: Análisis de factores
fa.diagram(factorial)
```

```{r}
factorial$RMSEA
```

# Clusters

```{r}
#| context: setup
library(pacman) 
p_load(rio, cluster, factoextra, tidyverse, ggrepel, scatterplot3d) 
```

```{r}
#| context: setup
subdata2 <- data.frame(violencia, row.names = 'Pais')
```

```{r}
#| context: setup
subdata2 <- subdata2 |> select(2,11,12)
subdata2 = na.omit(subdata2) 

library(dplyr)
subdata2 <- mutate_all(subdata2, as.numeric)
```


```{r}
#| context: setup
distancias= daisy(subdata2, metric="gower")
```

## Row {height=50%}
```{r}
fviz_nbclust(subdata2, hcut,diss=distancias,method = "gap_stat",k.max = 10,verbose = F)
```

```{r}
#| context: setup
aglomerativo = hcut(distancias, k = 3,hc_func='agnes',hc_method = "ward.D") 
divisivo = hcut(distancias, k = 3,hc_func='diana')
```

```{r message=FALSE, warning=FALSE}
#| context: setup
library(ggpubr)
p4 = fviz_silhouette(aglomerativo, label=TRUE)
p5 = fviz_silhouette(divisivo, label=TRUE)
```

```{r message=FALSE, warning=FALSE}
#| title: Gráfico de silueta
ggarrange(p4, p5)
```

## Row {height=50%}
```{r}
#| title: Dendograma
fviz_dend(divisivo, 
          rect = TRUE, 
          cex = 0.5)
```

```{r}
#| title: Dendograma en forma de árbol filogenético
library(igraph)
fviz_dend(divisivo, k=3, k_colors = c("#E7B800", "#FC4E07","#00AFBB"), type = "phylogenic", repel = TRUE)
```

```{r}
#| context: setup
subdata2$divisivo = divisivo$cluster
subdata2$divisivo = as.factor(subdata2$divisivo)
levels(subdata2$divisivo) = c("Menor avance en igualdad de género", "Mayor avance en igualdad de género", "Avance medio en igualdad de género")
```

```{r}
fviz_cluster(object = list(data=subdata2[,1:3], cluster = subdata2$divisivo),
             geom = c("text"), 
             ellipse.type = "convex", 
             repel = TRUE, 
             show.clust.cent = FALSE, ggtheme = theme_minimal())
```

# Data

```{r}
#| context: server
output$data <- renderTable({
  violencia})
```

```{r}
tableOutput('data')
```

## Row {height=10%}
```{r}
library(downloadthis)
download_link(
  link = "https://github.com/KatiaVillalobos/Trabajo-Final/raw/main/Data_violencia_genero.xlsx",
  button_label = "Descargar data como xlsx",
  button_type = "danger",
  has_icon = TRUE,
  icon = "fa fa-save",
  self_contained = FALSE
)
```
